package wifi4eu.wifi4eu.repository.beneficiary;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import wifi4eu.wifi4eu.entity.beneficiary.BeneficiaryListItem;

import java.util.List;

public interface BeneficiaryListItemRepository extends CrudRepository<BeneficiaryListItem, Integer> {
    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY lauId ASC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByLauIdAsc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY lauId DESC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByLauIdDesc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY lauId ASC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByLauIdAsc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY lauId DESC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByLauIdDesc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY name ASC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByNameAsc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY name DESC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByNameDesc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY name ASC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByNameAsc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY name DESC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByNameDesc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY countryCode ASC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByCountryCodeAsc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY countryCode DESC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByCountryCodeDesc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY countryCode ASC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByCountryCodeAsc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY countryCode DESC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByCountryCodeDesc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY counter ASC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByCounterAsc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY counter DESC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByCounterDesc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY counter ASC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByCounterAsc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY counter DESC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByCounterDesc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY status ASC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByStatusAsc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY status DESC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByStatusDesc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY status ASC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByStatusAsc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY status DESC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByStatusDesc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY mediation ASC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByMediationAsc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL ORDER BY mediation DESC OFFSET ?#{[0]} ROWS FETCH NEXT ?#{[1]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListOrderByMediationDesc(Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY mediation ASC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByMediationAsc(String name, Integer offset, Integer count);

    @Query(value = "SELECT DISTINCT(m1.name) as name, l.id as lauId, l.country_code as countryCode, (SELECT COUNT(1) FROM municipalities INNER JOIN registrations reg ON reg.municipality = municipalities.id INNER JOIN mayors may ON may.municipality = municipalities.id WHERE municipalities.name = m1.name AND reg._status = 0) as counter, (SELECT CASE WHEN count(1) > 0 THEN 1 ELSE 0 END FROM applications app INNER JOIN registrations reg ON app.id = reg.id AND reg.municipality = m1.id) AS status, (SELECT CASE WHEN sum(th.mediation) > 0 THEN 1 ELSE 0 END FROM threads th WHERE th.reason = m1.lau AND th.type = 1) AS mediation FROM municipalities m1 INNER JOIN laus l ON l.id = m1.lau WHERE l.country_code IS NOT NULL AND LOWER(name) LIKE LOWER(CONCAT('%',?#{[0]},'%')) ORDER BY mediation DESC OFFSET ?#{[1]} ROWS FETCH NEXT ?#{[2]} ROWS ONLY", nativeQuery = true)
    List<BeneficiaryListItem> findDgconnBeneficiaresListContainingNameOrderByMediationDesc(String name, Integer offset, Integer count);
}