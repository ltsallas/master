
package generated.jagate.ws.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import generated.jagate.model.CheckServiceHealthRequestType;
import generated.jagate.model.CheckServiceHealthResponseType;
import generated.jagate.model.CreateLegalEntityRequestType;
import generated.jagate.model.CreateLegalEntityResponseType;
import generated.jagate.model.GetAllBankAccountsRequestType;
import generated.jagate.model.GetAllBankAccountsResponseType;
import generated.jagate.model.GetBankAccountByFelIdRequestType;
import generated.jagate.model.GetBankAccountByFelIdResponseType;
import generated.jagate.model.GetBankAccountByPicRequestType;
import generated.jagate.model.GetBankAccountByPicResponseType;
import generated.jagate.model.GetEwsByFelIdRequestType;
import generated.jagate.model.GetEwsByFelIdResponseType;
import generated.jagate.model.GetEwsByPicRequestType;
import generated.jagate.model.GetEwsByPicResponseType;
import generated.jagate.model.GetLegalEntityBankAccountLinkRequestType;
import generated.jagate.model.GetLegalEntityBankAccountLinkResponseType;
import generated.jagate.model.GetMailingAddressesByPicRequestType;
import generated.jagate.model.GetMailingAddressesByPicResponseType;
import generated.jagate.model.GetStatusByFelIdRequestType;
import generated.jagate.model.GetStatusByFelIdResponseType;
import generated.jagate.model.GetStatusByPicRequestType;
import generated.jagate.model.GetStatusByPicResponseType;
import generated.jagate.model.SearchLegalEntityRequestType;
import generated.jagate.model.SearchLegalEntityResponseType;
import generated.jagate.model.UpdateLegalEntityRequestType;
import generated.jagate.model.UpdateLegalEntityResponseType;


/**
 * Provides Legal Entity related services.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ILegalEntityService", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    generated.jagate.model.servicecontext.V2.ObjectFactory.class,
    generated.jagate.model.header.V1.ObjectFactory.class,
    eu.europa.ec.research.fp.model.document.v5.ObjectFactory.class,
    generated.jagate.modelperson.v4.ObjectFactory.class,
    eu.europa.ec.research.fp.model.legalentity.v11.ObjectFactory.class,
    generated.jagate.model.address.V2.ObjectFactory.class,
    generated.jagate.model.person.V2.ObjectFactory.class,
    generated.jagate.ws.domain.base.v2.ObjectFactory.class,
    eu.europa.ec.rdg.jagate.ws.domain.legalentity.v6.ObjectFactory.class,
    eu.europa.ec.rdg.jagate.ws.domain.transaction.v1.ObjectFactory.class,
    eu.europa.ec.research.fp.model.code_ref.v2.ObjectFactory.class,
    generated.jagate.model.ObjectFactory.class,
    generated.jagate.model.address.v4.ObjectFactory.class,
    generated.jagate.model.bankaccount.V2.ObjectFactory.class,
    generated.jagate.model.bankaccount.V4.ObjectFactory.class,
    generated.jagate.model.base.V1.ObjectFactory.class,
    generated.jagate.model.certificate.v4.ObjectFactory.class,
    generated.jagate.model.coderef.V3.ObjectFactory.class,
    generated.jagate.model.documentref.v3.ObjectFactory.class,
    generated.jagate.model.legalentityref.v3.ObjectFactory.class,
    generated.jagate.model.projectref.v3.ObjectFactory.class,
    generated.jagate.model.servicehealth.V1.ObjectFactory.class,
    generated.jagate.ws.domain.visa.v1.ObjectFactory.class,
    generated.jagate.ws.domain.reference.v1.ObjectFactory.class,
    generated.jagate.ws.domain.constants.v1.ObjectFactory.class
})
public interface ILegalEntityService {


    /**
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.SearchLegalEntityResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "SearchLegalEntity")
    @WebResult(name = "SearchLegalEntityResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public SearchLegalEntityResponseType searchLegalEntity(
        @WebParam(name = "SearchLegalEntityRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        SearchLegalEntityRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets the early warning on legal entities.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetEwsByFelIdResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetEwsByFelId")
    @WebResult(name = "GetEwsByFelIdResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetEwsByFelIdResponseType getEwsByFelId(
        @WebParam(name = "GetEwsByFelIdRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetEwsByFelIdRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets the early warning on legal entities.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetEwsByPicResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetEwsByPic")
    @WebResult(name = "GetEwsByPicResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetEwsByPicResponseType getEwsByPic(
        @WebParam(name = "GetEwsByPicRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetEwsByPicRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets the early warning on legal entities.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetBankAccountByFelIdResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetBankAccountByFelId")
    @WebResult(name = "GetBankAccountByFelIdResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetBankAccountByFelIdResponseType getBankAccountByFelId(
        @WebParam(name = "GetBankAccountByFelIdRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetBankAccountByFelIdRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets the early warning on legal entities.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetBankAccountByPicResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetBankAccountByPic")
    @WebResult(name = "GetBankAccountByPicResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetBankAccountByPicResponseType getBankAccountByPic(
        @WebParam(name = "GetBankAccountByPicRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetBankAccountByPicRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets the Legal Entity statuses.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetStatusByFelIdResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetStatusByFelId")
    @WebResult(name = "GetStatusByFelIdResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetStatusByFelIdResponseType getStatusByFelId(
        @WebParam(name = "GetStatusByFelIdRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetStatusByFelIdRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets the Legal Entity statuses.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetStatusByPicResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetStatusByPic")
    @WebResult(name = "GetStatusByPicResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetStatusByPicResponseType getStatusByPic(
        @WebParam(name = "GetStatusByPicRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetStatusByPicRequestType request)
        throws LegalEntityException
    ;

    /**
     * Creates a legal entity in ABAC.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.CreateLegalEntityResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "CreateLegalEntity")
    @WebResult(name = "CreateLegalEntityResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public CreateLegalEntityResponseType createLegalEntity(
        @WebParam(name = "CreateLegalEntityRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        CreateLegalEntityRequestType request)
        throws LegalEntityException
    ;

    /**
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.UpdateLegalEntityResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "UpdateLegalEntity")
    @WebResult(name = "UpdateLegalEntityResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public UpdateLegalEntityResponseType updateLegalEntity(
        @WebParam(name = "UpdateLegalEntityRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        UpdateLegalEntityRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets all BA, LE and links (VALID and INVALID)
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetLegalEntityBankAccountLinkResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetLegalEntityBankAccountLink")
    @WebResult(name = "GetLegalEntityBankAccountLinkResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetLegalEntityBankAccountLinkResponseType getLegalEntityBankAccountLink(
        @WebParam(name = "GetLegalEntityBankAccountLinkRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetLegalEntityBankAccountLinkRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets all BA for a given PIC or FEL (VALID and INVALID)
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetAllBankAccountsResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetAllBankAccounts")
    @WebResult(name = "GetAllBankAccountsResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetAllBankAccountsResponseType getAllBankAccounts(
        @WebParam(name = "GetAllBankAccountsRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetAllBankAccountsRequestType request)
        throws LegalEntityException
    ;

    /**
     * Gets the mailing addresses for a legal entity.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.GetMailingAddressesByPicResponseType
     * @throws LegalEntityException
     */
    @WebMethod(operationName = "GetMailingAddressesByPic")
    @WebResult(name = "GetMailingAddressesByPicResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public GetMailingAddressesByPicResponseType getMailingAddressesByPic(
        @WebParam(name = "GetMailingAddressesByPicRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        GetMailingAddressesByPicRequestType request)
        throws LegalEntityException
    ;

    /**
     * Diagnostic operation to monitor service health.
     * 
     * @param request
     * @return
     *     returns generated.jagate.model.CheckServiceHealthResponseType
     */
    @WebMethod(operationName = "CheckServiceHealth")
    @WebResult(name = "CheckServiceHealthResponse", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "response")
    public CheckServiceHealthResponseType checkServiceHealth(
        @WebParam(name = "CheckServiceHealthRequest", targetNamespace = "http://ec.europa.eu/rdg/jagate/ws/legalentity/v6/interfaces", partName = "request")
        CheckServiceHealthRequestType request);

}
