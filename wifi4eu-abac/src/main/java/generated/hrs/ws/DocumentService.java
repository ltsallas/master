
package generated.hrs.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import generated.hrs.ws.model.AddExternalSignature;
import generated.hrs.ws.model.AddExternalSignatureResponse;
import generated.hrs.ws.model.AddTranslations;
import generated.hrs.ws.model.AddTranslationsResponse;
import generated.hrs.ws.model.ApplyProcedure;
import generated.hrs.ws.model.ApplyProcedureResponse;
import generated.hrs.ws.model.CancelItemCheckout;
import generated.hrs.ws.model.CancelItemCheckoutResponse;
import generated.hrs.ws.model.CheckinItem;
import generated.hrs.ws.model.CheckinItemResponse;
import generated.hrs.ws.model.CheckoutItem;
import generated.hrs.ws.model.CheckoutItemResponse;
import generated.hrs.ws.model.CreateDocument;
import generated.hrs.ws.model.CreateDocumentResponse;
import generated.hrs.ws.model.CreateOrUpdateSpecificMetadata;
import generated.hrs.ws.model.CreateOrUpdateSpecificMetadataResponse;
import generated.hrs.ws.model.CreateSpecificMetadataItems;
import generated.hrs.ws.model.CreateSpecificMetadataItemsResponse;
import generated.hrs.ws.model.DecryptItems;
import generated.hrs.ws.model.DecryptItemsResponse;
import generated.hrs.ws.model.DeleteAllSpecificMetadata;
import generated.hrs.ws.model.DeleteAllSpecificMetadataResponse;
import generated.hrs.ws.model.DeleteDocumentNotifications;
import generated.hrs.ws.model.DeleteDocumentNotificationsResponse;
import generated.hrs.ws.model.DeleteSpecificMetadataItems;
import generated.hrs.ws.model.DeleteSpecificMetadataItemsResponse;
import generated.hrs.ws.model.EncryptItems;
import generated.hrs.ws.model.EncryptItemsResponse;
import generated.hrs.ws.model.ExternalizeDocument;
import generated.hrs.ws.model.ExternalizeDocumentResponse;
import generated.hrs.ws.model.FileDocument;
import generated.hrs.ws.model.FileDocumentResponse;
import generated.hrs.ws.model.FindDocumentNotifications;
import generated.hrs.ws.model.FindDocumentNotificationsResponse;
import generated.hrs.ws.model.FindPotentialRegisteredDuplicates;
import generated.hrs.ws.model.FindPotentialRegisteredDuplicatesById;
import generated.hrs.ws.model.FindPotentialRegisteredDuplicatesResponse;
import generated.hrs.ws.model.LinkDocuments;
import generated.hrs.ws.model.LinkDocumentsResponse;
import generated.hrs.ws.model.MarkDocumentNotifications;
import generated.hrs.ws.model.MarkDocumentNotificationsResponse;
import generated.hrs.ws.model.ObjectFactory;
import generated.hrs.ws.model.RegisterDocument;
import generated.hrs.ws.model.RegisterDocumentById;
import generated.hrs.ws.model.RegisterDocumentByIdResponse;
import generated.hrs.ws.model.RegisterDocumentResponse;
import generated.hrs.ws.model.RevokeExternalization;
import generated.hrs.ws.model.RevokeExternalizationResponse;
import generated.hrs.ws.model.SearchDocumentsByExpression;
import generated.hrs.ws.model.SearchDocumentsByExpressionResponse;
import generated.hrs.ws.model.TrashDocument;
import generated.hrs.ws.model.TrashDocumentResponse;
import generated.hrs.ws.model.UnfileDocument;
import generated.hrs.ws.model.UnfileDocumentResponse;
import generated.hrs.ws.model.UnlinkDocuments;
import generated.hrs.ws.model.UnlinkDocumentsResponse;
import generated.hrs.ws.model.UpdateDocument;
import generated.hrs.ws.model.UpdateDocumentResponse;
import generated.hrs.ws.model.UpdateSpecificMetadataItems;
import generated.hrs.ws.model.UpdateSpecificMetadataItemsResponse;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DocumentService", targetNamespace = "http://ec.europa.eu/sg/hrs")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DocumentService {


    /**
     * This operation performs the filing of a document into a file of the
     *                 filing plan
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.FileDocumentResponse
     */
    @WebMethod
    @WebResult(name = "fileDocumentResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public FileDocumentResponse fileDocument(
        @WebParam(name = "fileDocument", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        FileDocument parameters);

    /**
     * This operation performs the unfiling of a document from a file of the
     *                 filing plan
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.UnfileDocumentResponse
     */
    @WebMethod
    @WebResult(name = "unfileDocumentResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public UnfileDocumentResponse unfileDocument(
        @WebParam(name = "unfileDocument", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        UnfileDocument parameters);

    /**
     * This operation creates a document in the common
     *                 repository. It returns generated metadata, such as the saveNumber. <br/>
     * 
     *                 In ARES UI, 'Security Classification' is displayed/referred as 'Level Of Sensitivity'.
     *                 'Level Of Sensitivity' is just an alias for securityClassification. <br/>
     * 
     *                 If securityClassification is a value different than 'NORMAL', the document
     *                 can have a marking. Markings affect the visibility of the document but can also
     *                 mandate other restrictions. For now, the COMP and OLAF family of markings forbid
     *                 having items on the document. <br/>
     * 
     *                 Specifying securityClassification 'EU_RESTRAINED' also forbids items on the document.
     * 
     *                 <br/>
     *                 If a file Id or a file search expression was provided then this operation
     *                 performs the filing of a document into a file of the filing plan.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.CreateDocumentResponse
     */
    @WebMethod
    @WebResult(name = "createDocumentResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public CreateDocumentResponse createDocument(
        @WebParam(name = "createDocument", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        CreateDocument parameters);

    /**
     * This operation updates an existing document from the common repository. <br/>
     *                 If the document has checked out items or is otherwise locked, the operation fails.<br/>
     * 
     *                 In ARES UI, 'Security Classification' is displayed/referred as 'Level Of Sensitivity'.
     *                 'Level Of Sensitivity' is just an alias for securityClassification. <br/>
     * 
     *                 If securityClassification is changed to 'EU_RESTRICTED', all existing items
     *                 must be removed as part of the update. </br>
     * 
     *                 The same is true for COMP and OLAF markings. Because they don't allow any items,
     *                 existing items must be removed as part of the update if any. <br/>
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.UpdateDocumentResponse
     */
    @WebMethod
    @WebResult(name = "updateDocumentResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public UpdateDocumentResponse updateDocument(
        @WebParam(name = "updateDocument", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        UpdateDocument parameters);

    /**
     * This operation sends an unregistered document to trash. Registered documents
     *                 can never be trashed. <br/>
     * 
     *                 Trashing a document will unfile it from any file where it is currently filed,
     *                 and will link it to a special trash folder. <br/>
     * 
     *                 If a document sits more than 6 month in trash, it will be deleted from the system.
     *                 If a document is filed after being trashed, but before being deleted, it's going to
     *                 be restored (un-trashed). <br/>
     * 
     *                 The user must have visibility on the document in order to trash it.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.TrashDocumentResponse
     */
    @WebMethod
    @WebResult(name = "trashDocumentResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public TrashDocumentResponse trashDocument(
        @WebParam(name = "trashDocument", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        TrashDocument parameters);

    /**
     * This operation registers an existing document. It returns generated
     *                 metadata, such as the registrationNumber. <br/>
     *                 If the document has checked out items or is otherwise locked, the operation fails. <br/>
     *                 If there are open eSignatory tasks, they will be automatically closed.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.RegisterDocumentByIdResponse
     */
    @WebMethod
    @WebResult(name = "registerDocumentByIdResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public RegisterDocumentByIdResponse registerDocumentById(
        @WebParam(name = "registerDocumentById", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        RegisterDocumentById parameters);

    /**
     * This operation performs the creation and registration of a document in
     *                 the common repository. It returns generated metadata, such as the saveNumber and the
     *                 registrationNumber. <br/>
     * 
     *                 In ARES UI, 'Security Classification' is displayed/referred as 'Level Of Sensitivity'.
     *                 'Level Of Sensitivity' is just an alias for securityClassification. <br/>
     * 
     *                 If the securityClassification has a value other than 'NORMAL', the document
     *                 can have a marking. Markings affect the visibility of the document but can also
     *                 mandate other restrictions. For now, the COMP and OLAF family of markings forbid
     *                 having items on the document. Specifying the securityClassification 'EU_RESTRAINED'
     *                 also forbids items on the document. In all other cases, it is compulsory to have
     *                 at least one item on the document to be able to perform registration.
     * 
     *                 <br/>
     *                 If a file Id or a file search expression was provided then this operation
     *                 performs the filing of a document into a file of the filing plan.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.RegisterDocumentResponse
     */
    @WebMethod
    @WebResult(name = "registerDocumentResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public RegisterDocumentResponse registerDocument(
        @WebParam(name = "registerDocument", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        RegisterDocument parameters);

    /**
     * This operation performs a checkout of the specified item. Only items with
     *                 uploaded content (i.e. items with attachment type different from ARES_SCANNED),
     *                 belonging to unregistered documents can be checked out. Translations cannot be
     *                 checked out.<br/>
     * 
     *                 A checkout will place a lock on the item, and the item will become readonly
     *                 unless the checkout operation is canceled. The document to which the item belongs
     *                 will also be considered locked as long as the item is checked out.<br/>
     * 
     *                 To retrieve the content of the item after checkout, the normal HTTP data transfer
     *                 service can be used.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.CheckoutItemResponse
     */
    @WebMethod
    @WebResult(name = "checkoutItemResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public CheckoutItemResponse checkoutItem(
        @WebParam(name = "checkoutItem", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        CheckoutItem parameters);

    /**
     * This operation canceles the checkout of an item. The lock is removed from
     *                 the item and modifications are again possible on it.<br/>
     * 
     *                 Note that the user that cancels the checkout must be the same as the one that
     *                 has performed the checkout.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.CancelItemCheckoutResponse
     */
    @WebMethod
    @WebResult(name = "cancelItemCheckoutResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public CancelItemCheckoutResponse cancelItemCheckout(
        @WebParam(name = "cancelItemCheckout", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        CancelItemCheckout parameters);

    /**
     * This operation creates a new version of the item, with the specified
     *                 content. The item content should have previously been uploaded with the usual HTTP
     *                 data transfer service. <br/>
     * 
     *                 Note that the user that checks in the item must be the same as the one that
     *                 has performed the checkout.<br/>
     * 
     *                 The new version of the item will receive a new repository id,
     *                 which is returned by this operation. The old version of the item will not be
     *                 accessible anymore with the current HRS services (i.e you will not be able to
     *                 retrieve the item's previous version by using the old item id); however, new
     *                 web service operations may be added in the future to retrieve
     *                 old item versions if needed.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.CheckinItemResponse
     */
    @WebMethod
    @WebResult(name = "checkinItemResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public CheckinItemResponse checkinItem(
        @WebParam(name = "checkinItem", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        CheckinItem parameters);

    /**
     * This operation adds translations to one of the items of a document
     *                 (the document can be registered or unregistered).   <br/>
     * 
     *                 For registered documents, only the document creator or DMO can add translations.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.AddTranslationsResponse
     */
    @WebMethod
    @WebResult(name = "addTranslationsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public AddTranslationsResponse addTranslations(
        @WebParam(name = "addTranslations", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        AddTranslations parameters);

    /**
     * This operation searches after documents that match the specified
     *                 search expression.
     *                 <p>
     *                 A search can be performed using an expression for the meta-data
     *                 (e.g. <tt>encodingDate>=2010-01-01</tt>), an expression for fulltext search (e.g.
     *                 <tt>FULLTEXT('Report')</tt>) or both expressions for a combined search. When performing
     *                 a combined search (i.e. specifying both the meta-data
     *                 search expression and the fulltext search expression) the effect will be of a
     *                 logical AND between those two expressions. For example, specifying
     *                 the meta-data search expression <tt>encodingDate>=2010-01-01</tt> and the fulltext
     *                 search expression <tt>FULLTEXT('Report')</tt> will return those documents that
     *                 contain the word 'Report' AND have been created after 01/01/2010.</p>
     * 
     *                 <p>
     *                 For performance reasons, the search will retrieve a maximum of 2000 results,
     *                 no matter how many documents match the search criteria. Furthermore, if more
     *                 than 300 documents are requested (i.e value of <tt>max</tt> is greater than 300),
     *                 then only basic metadata of documents can be retrieved. Thus, specifying any value
     *                 in <tt>DocumentRetrievalOptions</tt> when <tt>max>300</tt> is not allowed.
     *                 </p>
     * 
     *                 <p>Fields that can be used inside the search expression are:</p>
     *                 <ul>
     *                 <li> documentId - the document's internal id </li>
     *                 <li> title - the document's title</li>
     *                 <li> registrationNumber - the document's registration number</li>
     *                 <li> saveNumber - the document's save number</li>
     *                 <li> registrationDate - the document's registration date</li>
     *                 <li> documentDate - the document's date</li>
     *                 <li> encodingDate - the date when the document was created in the repository</li>
     *                 <li> sendDate - the date when the document was sent</li>
     *                 <li> modificationDate - the date when the document was last modified. A modification is considered to be any change to the document's metadata, filing, items, senders and recipients.</li>
     *                 <li> comments - the document's comments</li>
     *                 <li> createdOnBehalfOfEcasId - User name of the user on whose behalf the document was created (e.g. if a secretary creates a document on behalf of the head of unit, this field refers to the ECAS id of the head of unit)</li>
     *                 <li> createdOnBehalfOfName - fullname of the person on behalf of which the document was created.</li>
     *                 <li> createdOnBehalfOfOrganization - organization name of the person on behalf of which the document was created.</li>
     *                 <li> creatorEcasId - ECAS id of the document's creator (e.g. ECAS id of the secretary that created the document, even if acting on behalf of somebody else). Use this field for documents created with delegations, otherwise use createdOnBehalfOfEcasId.</li>
     *                 <li> creatorName - full name of the document's creator. Use this field for documents created with delegations, otherwise use createdOnBehalfOfName.</li>
     *                 <li> creatorOrganization - organization name of the document's creator. Use this field for documents created with delegations, otherwise use createdOnBehalfOfOrganization.</li>
     *                 <li> referenceNumberDigits - numeric part of the save number or the registration number, e.g. searching for 123 will match both digit.b.2.001(2016)123 or Ares(2016)123</li>
     *                 <li> registeredOnBehalfOfEcasId - ECAS id of the person on behalf of which the document was registered.</li>
     *                 <li> registeredOnBehalfOfName - full name of the person on behalf of which the document was registered.</li>
     *                 <li> registeredOnBehalfOfOrganization - organization name of the person on behalf of which the document was registered</li>
     *                 <li> registererEcasId - ECAS id of the person that registered the document. Use this field for documents registered with delegations, otherwise use registeredOnBehalfOf.</li>
     *                 <li> registererName - full name of the person that registered the document. Use this field for documents registered with delegations, otherwise use registeredOnBehalfOfName.</li>
     *                 <li> registererOrganization - organization name of the person that registered the document. Use this field for documents registered with delegations, otherwise use registeredOnBehalfOfOrganization.</li>
     *                 <li> registrationNumberDigits - numeric part of the registration number, e.g. 123 in case the full registration number is Ares(2016)123</li>
     *                 <li> isEncrypted - whether the document's items are stored encrypted or not. Note that regardless of how they are stored, items are always decrypted before being sent to the client.</li>
     *                 <li> itemName - search after documents that have at least one item with a name that satisfies the specified condition</li>
     *                 <li> itemScanWithoutContent - search after documents that have at least one item for which the scanning status matches the condition (e.g. true indicates a scanned item that has no content because it has not been scanned yet)</li>
     *                 <li> itemExternalReference - search after documents that have at least one item for which the external reference satisfies the condition</li>
     *                 <li> itemLanguage - search after documents that have at least one item for which the language matches the condition</li>
     *                 <li> saveNumberDigits -  numeric part of the save number, e.g. 123 in case the full registration number is digit.b.2.001(2016)123</li>
     *                 <li> senderId - search for documents that have at least one sender with an entity id that satisfies the specified condition</li>
     *                 <li> senderIsInternal - search for documents where the sender is internal (person or organization)</li>
     *                 <li> senderIsOrganization - search for documents where the sender is an organization</li>
     *                 <li> senderName - the full name of the person</li>
     *                 <li> senderOrganization - the name of the organization</li>
     *                 <li> recipientId - search for documents that have at least one recipient with an entity id that satisfies the specified condition</li>
     *                 <li> recipientIsInternal - search for documents where the recipient is internal</li>
     *                 <li> recipientIsOrganization - search for documents where the recipient is an organization</li>
     *                 <li> recipientName - the fullname of the person</li>
     *                 <li> recipientOrganization - the name of the organization</li>
     *                 <li> recipientCode - TO or CC</li>
     *                 <li> workflowCategory - the category of the workflow - ESIGNATORY, ASSIGNMENT or PAPER</li>
     *                 <li> actionCode - search documents that have at least one task with a task code that satisfies the condition</li>
     *                 <li> assignmentDate - the date when the task was assigned</li>
     *                 <li> taskComments - comments in the task</li>
     *                 <li> taskInstructions - instructions in the task</li>
     *                 <li> taskStatus - status of the task, such as ACTIVE, CLOSED, BYPASSED etc.</li>
     *                 <li> assigneeEcasId - ECAS id of the task's assigned person</li>
     *                 <li> assigneeName - the name of the assigned person</li>
     *                 <li> assigneeOrganization - the organization name the assignee belongs to</li>
     *                 <li> assignerEcasId - ECAS id of the person that assigned the task</li>
     *                 <li> assignerName - the name of the person that assigned the task</li>
     *                 <li> assignerOrganization - the organization code the assigner belongs to</li>
     *                 <li> fileId - search documents that are filed in the file with this fileId</li>
     *                 <li> fileName - search for documents filed in a file with this name. English, French and German fields are taken into account.</li>
     *                 <li> fileCode - search documents that are filed in the file with this fileCode</li>
     *                 <li> fileSpecificCode - search documents that are filed in the file where this specific file code satisfies the condition</li>
     *                 <li> chefDeFile - search documents that are filed in the file where the 'chef de file' satisfies the condition</li>
     *                 <li> filingDate - search documents that are filed in a file on a this date</li>
     *                 <li> link - search documents that have at least one link of this enum type
     *                             Valid values are RESPONSE, REQUEST, GENERAL and DUPLICATE. These are enums (and not strings) and don't have to be surrounded with single quotes
     *                             Examples: link = REQUEST
     *                                       link != GENERAL</li>
     *                 <li> linkTarget - search documents that have at least one link pointing to the specified document id.
     *                                   By including this search criteria, only documents with links will be taken into account when searching</li>
     *                 <li> securityClassification - search documents based on their security classification (alias level of sensitivity).
     *                                               In ARES UI, 'LIMITED' is displayed/reffered as 'Handling restriction'(an alias to 'LIMITED').
     *                                               Valid values are NORMAL, LIMITED, EU_RESTRAINED and EURA_RESTRICTED.
     *                                               Example: securityClassification = LIMITED </li>
     *                 <li> marker - search documents that have a specific marker
     *                               Valid values are enum values from MarkerType.
     *                               Example: marker = PERSONAL </li>
     *                 <li> personConcernedEcasId - ECAS id of the person specified in the marking as person concerned.</li>
     *                 <li> personConcernedName - full name of the person specified in the marking as person concerned.</li>
     *                 <li> personConcernedOrganization - organization of the person specified in the marking as person concerned.</li>
     *                 <li> procedureName - search documents based on the name of their linked procedure.
     *                                      Both the English and the French names are take into account.</li>
     *                 <li> procedureId - search documents based on the ID of their linked procedure.</li>
     *                 <li> externalizationStatus - indicates if the document has been externalized to ERS or not. Valid values are:
     *                                              NOT_EXTERNALIZED, EXTERNALIZATION_INITIATED, EXTERNALIZED, REVOCATION_INITIATED, REVOKED.</li>
     *                 <li> isPartialExternalization - indicates if the externalization is partial or not.</li>
     *                 <li> externalizationDate - date when the document was externalized (when the operation was triggered in Hermes)</li>
     *                 <li> revocationDate - date when the document was revoked (when the operation was triggered in Hermes)</li>
     *                 <li> externalizedBy - full name of the person that externalized the document</li>
     *                 <li> revokedBy -  full name of the person that revoked the document</li>
     * 
     *                 <li> specificMetadataNamespace</li>
     *                 <li> specificMetadataString1</li>
     *                 <li> specificMetadataString2</li>
     *                 <li> specificMetadataString3</li>
     *                 <li> specificMetadataString4</li>
     *                 <li> specificMetadataString5</li>
     *                 <li> specificMetadataString6</li>
     *                 <li> specificMetadataString7</li>
     *                 <li> specificMetadataDouble1</li>
     *                 <li> specificMetadataDouble2</li>
     *                 <li> specificMetadataDouble3</li>
     *                 <li> specificMetadataDate1</li>
     *                 <li> specificMetadataDate2</li>
     *                 <li> specificMetadataDate3</li>
     *                 <li> specificMetadataBoolean1</li>
     *                 <li> specificMetadataBoolean2</li>
     *                 <li> specificMetadataBoolean3</li>
     *                 </ul>
     * 
     *                The following fields are deprecated:
     *                <ul>
     *                  <li> assigneeOrganizationCode - use assigneeOrganization instead</li>
     *                  <li> assignerOrganizationCode - use assignerOrganization instead</li>
     *                  <li> createdOnBehalfOf - use createdOnBehalfOfEcasId instead</li>
     *                  <li> saverEcasId - use creatorEcasId instead</li>
     *                  <li> senderInternalPersonName - use senderName and senderIsInternal instead</li>
     *                  <li> senderInternalOrganizationCode - use senderOrganization and senderIsInternal instead</li>
     *                  <li> senderIsInternalOrganization - use senderIsOrganization and senderIsInternal instead</li>
     *                  <li> senderExternalPersonName - similar to above</li>
     *                  <li> senderExternalOrganizationName - similar to above</li>
     *                  <li> senderIsExternalOrganization - similar to above</li>
     *                  <li> recipientInternalPersonName - similar to above</li>
     *                  <li> recipientInternalOrganizationCode - similar to above</li>
     *                  <li> recipientIsInternalOrganization - similar to above</li>
     *                  <li> recipientExternalPersonName - similar to above</li>
     *                  <li> recipientExternalOrganizationName - similar to above</li>
     *                  <li> recipientIsExternalOrganization - similar to above</li>
     *                  <li> linkType - use link instead</li>
     *                  <li> securityClassificationType - use securityClassification instead</li>
     *                </ul>
     * 
     *                <p>Sample search expressions are: </p>
     *                <ul style="list-style-type:none">
     *                  <li>title CONTAINS 'Report'</li>
     *                  <li>registrationNumber = 'Ares(2008)2301'</li>
     *                  <li>documentDate BETWEEN (2008-12-23, 2009-01-14)</li>
     *                  <li>comments startsWith 'Updated'</li>
     *                </ul>
     * 
     *                <p>The fulltext search expression does not have any fields but always requires the word <tt>FULLTEXT</tt>.
     *                   Sample fulltext search expressions are:</p>
     *                <ul style="list-style-type:none">
     *                  <li>FULLTEXT('test')</li>
     *                  <li>FULLTEXT('"This is a test"')</li>
     *                </ul>
     * 
     * 
     *                <p>When not using the index server, the following fields can be used for sorting:</p>
     *                <ul>
     *                     <li> documentId</li>
     *                     <li> title</li>
     *                     <li> registrationNumber</li>
     *                     <li> saveNumber</li>
     *                     <li> registrationDate</li>
     *                     <li> documentDate</li>
     *                     <li> encodingDate</li>
     *                     <li> modificationDate</li>
     *                     <li> comments</li>
     *                     <li> securityClassification</li>
     *                     <li> itemName</li>
     *                </ul>
     *                <p>In case the index server is used, by default documents are sorted by matching
     *                   relevance.
     *                   Following fields can be used for sorting:</p>
     *                   <ul>
     *                     <li>title</li>
     *                     <li>registrationDate</li>
     *                     <li>encodingDate</li>
     *                   </ul>
     *                 <p>Note that the same expression might return different results when using the index
     *                    server because the underlying technology is different.
     *                    For the index server, updates might not be immediately visible ('save-to-search'
     *                    latency).
     *                    Also empty strings, null, not, ... might produce different results.
     *                 </p>
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.SearchDocumentsByExpressionResponse
     */
    @WebMethod
    @WebResult(name = "searchDocumentsByExpressionResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public SearchDocumentsByExpressionResponse searchDocumentsByExpression(
        @WebParam(name = "searchDocumentsByExpression", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        SearchDocumentsByExpression parameters);

    /**
     * Creates a link between 2 documents. The link is two-way (meaning if A is
     *                 linked to B, then B is also linked to A). Allowed link types for creation are:
     *                 GENERAL, DUPLICATE and RESPONSE. In case of the RESPONSE type, the reverse link will
     *                 automatically have the REQUEST type assigned.
     * 
     *                 <p>Any two documents can be linked together, unless a link of the same type
     *                 already exists, in which case a failure will be thrown.</p>
     * 
     *                 <p>The user needs to have permissions to "see" the documents (i.e. to be able to find
     *                 them using a search) in order to be able to create links.</p>
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.LinkDocumentsResponse
     */
    @WebMethod
    @WebResult(name = "linkDocumentsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public LinkDocumentsResponse linkDocuments(
        @WebParam(name = "linkDocuments", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        LinkDocuments parameters);

    /**
     * Removes a link of the specified type between 2 documents. If no such
     *                 link exists, the operation will return false, otherwise it will return true. After
     *                 the successfull execution, neither A will be linked to B, nor B will be linked to A
     *                 with o link of the specified type.
     * 
     *                 <p>In the case of the RESPONSE/REQUEST link type, the directionality of the link
     *                 doesn't matter, meaning that if the link A -> B is of type RESPONSE, but
     *                 when removing the parameters are (A, B, REQUEST) the link will still be removed.</p>
     * 
     *                 <p>The user needs to have permissions to "see" the documents (i.e. to be able to find
     *                 them using a search) in order to be able to remove links.</p>
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.UnlinkDocumentsResponse
     */
    @WebMethod
    @WebResult(name = "unlinkDocumentsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public UnlinkDocumentsResponse unlinkDocuments(
        @WebParam(name = "unlinkDocuments", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        UnlinkDocuments parameters);

    /**
     * Searches the repository for registered documents that might be a potential duplicate
     *                 of a document that has to be registered. This operation must be called prior to <i>
     *                 registerDocument</i>. For ease of use, it accepts the same input data as a
     *                 registration request.<br />
     *                 Currently following data is used when searching for duplicates:
     *                 <ul>
     *                 <li>title</li>
     *                 <li>document date</li>
     *                 <li>mail type</li>
     *                 <li>senders / recipients (depending on the mail type)</li>
     *                 </ul>
     *                 The purpose of this operation is to prevent double registrations.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.FindPotentialRegisteredDuplicatesResponse
     */
    @WebMethod
    @WebResult(name = "findPotentialRegisteredDuplicatesResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public FindPotentialRegisteredDuplicatesResponse findPotentialRegisteredDuplicates(
        @WebParam(name = "findPotentialRegisteredDuplicates", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        FindPotentialRegisteredDuplicates parameters);

    /**
     * Searches the repository for registered documents that might be a potential duplicate
     *                 of a document that has to be registered. This operation must be called prior to <i>
     *                 registerDocumentById</i>. The document ID should correspond to a non-registered
     *                 document.<br />
     *                 The purpose of this operation is to prevent double registrations.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.FindPotentialRegisteredDuplicatesResponse
     */
    @WebMethod
    @WebResult(name = "findPotentialRegisteredDuplicatesResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public FindPotentialRegisteredDuplicatesResponse findPotentialRegisteredDuplicatesById(
        @WebParam(name = "findPotentialRegisteredDuplicatesById", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        FindPotentialRegisteredDuplicatesById parameters);

    /**
     * Encrypts the content of all the items of a document. In order to encrypt items the
     *                 user should have a specific role that allows him/her to perform this operation.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.EncryptItemsResponse
     */
    @WebMethod
    @WebResult(name = "encryptItemsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public EncryptItemsResponse encryptItems(
        @WebParam(name = "encryptItems", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        EncryptItems parameters);

    /**
     * Decrypts the content of all the items of a document. In order to decrypt items the
     *                 user should have a specific role that allows him/her to perform this operation.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.DecryptItemsResponse
     */
    @WebMethod
    @WebResult(name = "decryptItemsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public DecryptItemsResponse decryptItems(
        @WebParam(name = "decryptItems", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        DecryptItems parameters);

    /**
     * Find received document notifications for the current user.
     *                     A document is received at the moment of registration if the user is one of the recipients,
     *                     or if modify special is performed on a registered document and the user is added to the list
     *                     of recipients.
     *                     Document notifications are ordered descending by the document's registration date. The number
     *                     of results is limited to 300.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.FindDocumentNotificationsResponse
     */
    @WebMethod
    @WebResult(name = "findDocumentNotificationsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public FindDocumentNotificationsResponse findDocumentNotifications(
        @WebParam(name = "findDocumentNotifications", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        FindDocumentNotifications parameters);

    /**
     * Mark one or more document notifications as read/unread.
     *                     The document notifications have to belong to the current user.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.MarkDocumentNotificationsResponse
     */
    @WebMethod
    @WebResult(name = "markDocumentNotificationsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public MarkDocumentNotificationsResponse markDocumentNotifications(
        @WebParam(name = "markDocumentNotifications", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        MarkDocumentNotifications parameters);

    /**
     * Delete one or more document notifications, specified by their notification id.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.DeleteDocumentNotificationsResponse
     */
    @WebMethod
    @WebResult(name = "deleteDocumentNotificationsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public DeleteDocumentNotificationsResponse deleteDocumentNotifications(
        @WebParam(name = "deleteDocumentNotifications", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        DeleteDocumentNotifications parameters);

    /**
     * Externalize the specified document (or part of it) to the ERS repository. The target ERS partition has
     *                 to be specified and the client application needs to have externalization rights for that partition.
     * 
     *                 The externalization operation is asynchronous, i.e. the document will arrive in the ERS repository at
     *                 some point in the future, but this operation returns immediately.
     * 
     *                 Note:
     *                     
     *                         If the document is already externalized, the document will be re-externalized.
     *                         A document can be externalized to only one partition
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.ExternalizeDocumentResponse
     */
    @WebMethod
    @WebResult(name = "externalizeDocumentResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public ExternalizeDocumentResponse externalizeDocument(
        @WebParam(name = "externalizeDocument", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        ExternalizeDocument parameters);

    /**
     * Revoke the specified document from the ERS repository. The client application needs to have
     *                 externalization rights on the ERS partition where the document resides in order to revoke it.
     * 
     *                 The revocation operation is asynchronous, i.e. the document will be removed from the ERS repository
     *                 at some point in the future, but this operation returns immediately.
     * 
     *                 Only documents that are externalized can be revoked, otherwise a failure is raised.
     *                 After revocation, a document can be externalized again if necessary.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.RevokeExternalizationResponse
     */
    @WebMethod
    @WebResult(name = "revokeExternalizationResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public RevokeExternalizationResponse revokeExternalization(
        @WebParam(name = "revokeExternalization", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        RevokeExternalization parameters);

    /**
     * Add or modify (business) specific metadata for the specified document.
     * 
     *                 In case of an update, only the fields present in the request will be updated. The others
     *                 will be unaffected. To remove a value, use use the nil attribute e.g. <string1 xsi:nil="true" />
     * 
     *                 This metadata allows a client application to add specific (business) metadata together
     *                 with the e-Domec metadata. It enables clients to e.g. searches on the specific metadata
     *                 combined with the e-Domec metadata.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.CreateOrUpdateSpecificMetadataResponse
     */
    @WebMethod
    @WebResult(name = "createOrUpdateSpecificMetadataResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public CreateOrUpdateSpecificMetadataResponse createOrUpdateSpecificMetadata(
        @WebParam(name = "createOrUpdateSpecificMetadata", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        CreateOrUpdateSpecificMetadata parameters);

    /**
     * Delete (business) specific metadata for the specified document.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.DeleteAllSpecificMetadataResponse
     */
    @WebMethod
    @WebResult(name = "deleteAllSpecificMetadataResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public DeleteAllSpecificMetadataResponse deleteAllSpecificMetadata(
        @WebParam(name = "deleteAllSpecificMetadata", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        DeleteAllSpecificMetadata parameters);

    /**
     * This operation applies a new procedure to an existing document or removes the procedure from the document. <br/>
     * 
     *                 The user must have access to the document and have the right to apply the procedure, otherwise the operation will fail. <br/>
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.ApplyProcedureResponse
     */
    @WebMethod
    @WebResult(name = "applyProcedureResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public ApplyProcedureResponse applyProcedure(
        @WebParam(name = "applyProcedure", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        ApplyProcedure parameters);

    /**
     * Add bussiness specific metadata XML items (attachments) to the specified document.
     * 
     *                 A well-formed XML file needs to uploaded first.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.CreateSpecificMetadataItemsResponse
     */
    @WebMethod
    @WebResult(name = "createSpecificMetadataItemsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public CreateSpecificMetadataItemsResponse createSpecificMetadataItems(
        @WebParam(name = "createSpecificMetadataItems", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        CreateSpecificMetadataItems parameters);

    /**
     * Update bussiness specific metadata XML items (attachments) of a specified document.
     * 
     *                 If the content needs to be changed, a well-formed XML file needs to uploaded first.
     *                 In case of an update, only the fields present in the request will be updated. The others
     *                 will be unaffected.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.UpdateSpecificMetadataItemsResponse
     */
    @WebMethod
    @WebResult(name = "updateSpecificMetadataItemsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public UpdateSpecificMetadataItemsResponse updateSpecificMetadataItems(
        @WebParam(name = "updateSpecificMetadataItems", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        UpdateSpecificMetadataItems parameters);

    /**
     * Delete bussiness specific metadata XML items (attachments) of a specified document.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.DeleteSpecificMetadataItemsResponse
     */
    @WebMethod
    @WebResult(name = "deleteSpecificMetadataItemsResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public DeleteSpecificMetadataItemsResponse deleteSpecificMetadataItems(
        @WebParam(name = "deleteSpecificMetadataItems", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        DeleteSpecificMetadataItems parameters);

    /**
     * An external EU Login / ECAS signature will be added to the list of documents. The consequences is that the documents will
     *                 become signed and locked.
     * 
     *                 The documents must not be registered. The order of the documents must match the order as they appear in the ECAS
     *                 digital signature. Also the titles and attachments must match.
     * 
     *                 Upon registration, the rendition will contain a message indicating that it was digitally signed. This is because
     *                 we consider and trust EU Login / ECAS signatures (compared to normal HRS external signatures) as the transfer or
     *                 of a validation chain from a given system to Hermes. It's considered similar as an Ares/Hermes e-Signatory SIGN
     *                 task.
     * 
     * @param parameters
     * @return
     *     returns generated.hrs.ws.model.AddExternalSignatureResponse
     */
    @WebMethod
    @WebResult(name = "addExternalSignatureResponse", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "result")
    public AddExternalSignatureResponse addExternalSignature(
        @WebParam(name = "addExternalSignature", targetNamespace = "http://ec.europa.eu/sg/hrs/types", partName = "parameters")
        AddExternalSignature parameters);

}
