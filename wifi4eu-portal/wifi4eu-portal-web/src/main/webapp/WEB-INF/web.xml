<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <display-name>eUI Angular2 application</display-name>

    <servlet>
        <servlet-name>spring-REST</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring-REST</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>


    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

    <!-- ${enable.appinsights.start}
    <filter>
        <filter-name>ApplicationInsightsWebFilter</filter-name>
        <filter-class>
            com.microsoft.applicationinsights.web.internal.WebRequestTrackingFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ApplicationInsightsWebFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    ${enable.appinsights.end} -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>userFilter</filter-name>
        <filter-class>${user.filter.path}</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>userFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- This is an example security constraint for a resource that requires only authentication but not authorization: -->
    <!--<security-constraint>
        <web-resource-collection>
            <web-resource-name>ecasV2-minimal</web-resource-name>
            <description>
                This is the protected area of the application.
            </description>
            <url-pattern>/api/beneficiary/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <description>
                Requires users to be authenticated but does not require them to be authorized.
            </description>
            <role-name>*</role-name>
        </auth-constraint>
        <user-data-constraint>
            <description>
                Encryption is not required for this area.
            </description>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>-->
    <!--<security-constraint>-->
    <!--<web-resource-collection>-->
    <!--<web-resource-name>ecas-demo</web-resource-name>-->
    <!--<description>Requires users to be authenticated but does not require them to be authorized</description>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</web-resource-collection>-->
    <!--<auth-constraint>-->
    <!--<description>allow users with any role</description>-->
    <!--<role-name>*</role-name>-->
    <!--</auth-constraint>-->
    <!--<user-data-constraint>-->
    <!--<description>Encryption is not required for the application in general.</description>-->
    <!--<transport-guarantee>NONE</transport-guarantee>-->
    <!--</user-data-constraint>-->
    <!--</security-constraint>-->


    <!-- ${enable.security.start} -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>ecas-demo</web-resource-name>
            <description>Requires users to be authenticated but does not require them to be authorized</description>
            <url-pattern>/index.jsp</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <description>allow users with any role</description>
            <role-name>*</role-name>
        </auth-constraint>
        <user-data-constraint>
            <description>Encryption is not required for the application in general.</description>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <!-- ${enable.security.end} -->

    <resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/wififoreu</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <!-- ${enable.login.start} -->
    <login-config>
        <auth-method>ECAS</auth-method>
        <realm-name>ecas-demo Realm</realm-name>
    </login-config>
    <!-- ${enable.login.end} -->

</web-app>
